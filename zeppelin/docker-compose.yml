version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    ports:
      - "9870:9870"
      - "9000:9000"
    networks:
      - spark-net
    healthcheck:
      interval: 5s
      retries: 100

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
    depends_on:
      namenode:
        condition: service_healthy
    networks:
      - spark-net
    healthcheck:
      interval: 5s
      retries: 100

  spark-master:
    image: bde2020/spark-master:3.0.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_HOME=/opt/zeppelin/interpreter
    depends_on:
      namenode:
        condition: service_healthy
      datanode:
        condition: service_healthy
    networks:
      - spark-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5

  spark-worker:
    image: bde2020/spark-worker:3.0.1-hadoop3.2
    container_name: spark-worker
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      spark-master:
        condition: service_healthy
    networks:
      - spark-net
    healthcheck:
      interval: 5s
      retries: 100
    ports:
      - "8081:8081"

  zeppelin:
    image: apache/zeppelin:0.10.1
    container_name: zeppelin
    ports:
      - "9090:8080"
    volumes:
      - ./notebook:/opt/zeppelin/notebook
      - ./data:/opt/zeppelin/data
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:8020
      - SPARK_MASTER=spark://spark-master:7077
      - ZEPPELIN_NOTEBOOK_DIR=/opt/zeppelin/notebook
      - SPARK_HOME=/opt/zeppelin/interpreter
    depends_on:
      spark-master:
        condition: service_healthy
      namenode:
        condition: service_healthy
    networks:
      - spark-net
    healthcheck:
      interval: 5s
      retries: 100

volumes:
  hadoop_namenode:
  hadoop_datanode:

networks:
  spark-net:
    driver: bridge
